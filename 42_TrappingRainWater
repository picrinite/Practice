/* Question
Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.

For example,
Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.


*/
#include <map>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <unordered_set>
#include <unordered_map>
using namespace std;

class Solution {
public:
	int trap(vector<int>& height) {
		stack<int>  st;
		int total = 0;
		for (int i = 0; i < height.size(); ++i) {
			if (!height[i])
				continue;
			int low = 0;
			while (!st.empty()) {
				int nWidth = i - st.top() - 1;
				int nHeight = min(height[i], height[st.top()]) - low;
				total += nWidth * nHeight;
				low += nHeight;
				if (height[i] >= height[st.top()])
					st.pop();
				else 
					break;				
			}
			st.push(i);
		}
		return total;
	}
};


int main() {
	Solution s;
	vector<int> input1{ 0,1,0,2,1,0,1,3,2,1,2,1 };  //6
	vector<int> input2{ 4, 0, 2 };		//2
	vector<int> input3{ 6,4,2,0,3,2,0,3,1,4,5,3,2,7,5,3,0,1,2,1,3,4,6,8,1,3 };    //83
	cout << s.trap(input1) << endl;
	cout << s.trap(input2) << endl;
	cout << s.trap(input3) << endl;
}
